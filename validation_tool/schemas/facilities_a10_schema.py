from pandera import DataFrameSchema, Column, Check, Index, MultiIndex

schema = DataFrameSchema(
    columns={
        "Agency": Column(
            dtype="object",
            checks=None,
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=None,
        ),
        "City": Column(
            dtype="object",
            checks=None,
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=None,
        ),
        "State": Column(
            dtype="object",
            checks=[Check.eq('CA')],
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description="The state must be CA.",
            title="State = CA check",
        ),
        "Organization Type": Column(
            dtype="object",
            checks=None,
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=None,
        ),
        "Reporter Type": Column(
            dtype="object",
            checks=None,
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=None,
        ),
        "Mode": Column(
            dtype="object",
            checks=None,
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=None,
        ),
        "TOS": Column(
            dtype="object",
            checks=None,
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=None,
        ),
        "Owned_Total Facilities": Column(
            dtype="float64",
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check(lambda x: x % 1 == 0),
            ],
            nullable=True,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=["0 or more check", "int check"]
        ),
        "Leased from a Public Entity_Total Facilities": Column(
            dtype="float64",
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check(lambda x: x % 1 == 0),
            ],
            nullable=True,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=["0 or more check", "int check"]
        ),
        "Leased from a Private Entity_Total Facilities": Column(
            dtype="float64",
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check(lambda x: x % 1 == 0),
            ],
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=["0 or more check", "int check"]
        ),
        "Owned by PT Provider_Total Facilities": Column(
            dtype="float64",
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check(lambda x: x % 1 == 0),
            ],
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=["0 or more check", "int check"]
        ),
        "Owned by Public Agency_Total Facilities": Column(
            dtype="float64",
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check(lambda x: x % 1 == 0),
            ],
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=["0 or more check", "int check"]
        ),
        "Leased by PT Provider_Total Facilities": Column(
            dtype="float64",
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check(lambda x: x % 1 == 0),
            ],
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=["0 or more check", "int check"]
        ),
        "Leased by Public Agency_Total Facilities": Column(
            dtype="float64",
            checks=[
                Check.greater_than_or_equal_to(min_value=0.0),
                Check(lambda x: x % 1 == 0),
            ],
            nullable=False,
            unique=False,
            coerce=False,
            required=True,
            regex=False,
            description=None,
            title=["0 or more check", "int check"]
        ),
    },
    ### Checks at the DataFrameSchema-level
            # Check that total across all modes is not zero - should be some facilities reported.
    checks=[Check(lambda x: x[['Owned_Total Facilities', 
                                 'Leased from a Private Entity_Total Facilities',
                                 'Leased from a Public Entity_Total Facilities',
                                 'Owned by Public Agency_Total Facilities',
                                 'Owned by PT Provider_Total Facilities', 
                                 'Leased by PT Provider_Total Facilities', 
                                 'Leased by Public Agency_Total Facilities']].sum(axis=1) > 0),
            # Check that total across all modes is a whole number.
            Check(lambda x: x[['Owned_Total Facilities', 
                                 'Leased from a Private Entity_Total Facilities',
                                 'Leased from a Public Entity_Total Facilities',
                                 'Owned by Public Agency_Total Facilities',
                                 'Owned by PT Provider_Total Facilities', 
                                 'Leased by PT Provider_Total Facilities', 
                                 'Leased by Public Agency_Total Facilities']].sum(axis=1) % 1 == 0),
                                 ],
    # dtype=None,
    # coerce=True,
    # strict=False,
    # name=None,
    # ordered=False,
    # unique=None,
    report_duplicates="all",
    # unique_column_names=False,
    # add_missing_columns=False,
    title="all total > 0",
    description="all total > 0",
)